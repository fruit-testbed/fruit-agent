#!/bin/sh

active=$(mount | grep '/media/root-ro' | grep -v overlay | head -1 | cut -d' ' -f1)
if [ "$active" = "/dev/mmcblk0p2" ]; then
	non_active="/dev/mmcblk0p3"
else
	non_active="/dev/mmcblk0p2"
fi

non_active_dir=/media/root-bak
flag_dir=/media/mmcblk0p1
flag_file="$flag_dir/$(echo "$non_active" | sed 's/\//./g').dirty"

logger -st fruit "Updating $non_active"

mark_dirty() {
	# $1: mark partition $1 as dirty
	mount -o remount,rw $flag_dir && \
		touch $flag_file && \
		mount -o remount,ro $flag_dir
	return $?
}

mark_clean() {
	# $1: mark partition $1 as clean
	mount -o remount,rw $flag_dir && \
		rm -f $flag_file && \
		mount -o remount,ro $flag_dir
	return $?
}

mount_non_active() {
	mkdir -p $non_active_dir && \
		mount $non_active $non_active_dir && \
		mount -t proc non $non_active_dir/proc && \
		mount -o bind /sys $non_active_dir/sys && \
		mount -o bind /dev $non_active_dir/dev
	return $?
}

umount_non_active() {
	umount -f $non_active_dir/dev 1>/dev/null 2>/dev/null
	umount -f $non_active_dir/sys 1>/dev/null 2>/dev/null
	umount -f $non_active_dir/proc 1>/dev/null 2>/dev/null
	[ $(mount | grep " on $non_active_dir " | wc -l) -ne 0 ] && umount -f $non_active_dir || true
	return $?
}

apply_update() {
	local tmp=/media/root-tmp
	local update=/media/root-update
	local diff=$(mktemp)
	local ret=0

	mkdir -p $tmp $update \
		&& mount -t tmpfs root-tmpfs $tmp \
		&& mkdir -p $tmp/root $tmp/work \
		&& mount -t overlay \
			-o lowerdir=$non_active_dir,upperdir=$tmp/root,workdir=$tmp/work \
			overlayfs $update \
		&& apk -q --root $update update \
			1>/tmp/.fruit-update.apk-update.stdout \
			2>/tmp/.fruit-update.apk-update.stderr \
		&& apk --root $update --purge --wait 1200 upgrade \
			1>/tmp/.fruit-update.apk-upgrade.stdout \
			2>/tmp/.fruit-update.apk-upgrade.stderr \

	ret=$((ret + $?))
	if [ $ret -eq 0 ]; then
		diff -rq --no-dereference $update $non_active_dir > $diff
		# copy files that differs
		grep " differ$" $diff | while read line; do
			src=$(echo "$line" | cut -d' ' -f2)
			dst=$(echo "$line" | cut -d' ' -f4)
			if [ "$src" != "$update/lib/apk/db/scripts.tar" ]; then
				logger -st fruit-update "Copying $src to $dst"
				cp -a "$src" "$dst"
			fi
			ret=$((ret + $?))
		done
		# delete files that only exists on the older root partition
		grep "Only on ${root}:" $diff | while read line; do
			file=$(echo "$line" | cut -d' ' -f4)
			logger -st fruit-update "Deleting $file"
			rm -f "$file"
			ret=$((ret + $?))
		done
		# compare /lib/apk/db/scripts.tar
		local newscripts=$(mktemp)
		local oldscripts=$(mktemp)
		tar -tf $update/lib/apk/db/scripts.tar > $newscripts
		tar -tf $non_active_dir/lib/apk/db/scripts.tar > $oldscripts
		diff -q $newscripts $oldscripts >/dev/null
		if [ $? -ne 0 ]; then
			cp -a $update/lib/apk/db/scripts.tar \
				$non_active_dir/lib/apk/db/scripts.tar
		fi
		rm -f $newscripts $oldscripts
	else
		logger -st fruit-update "'apk upgrade' failed"
	fi
	umount -f $update
	umount -f $tmp
	rm -f $diff
	return $ret
}

recover_non_active() {
	logger -st fruit "Recovering: cloning $active to $non_active"
	dd if=$active of=$non_active 2>/dev/null \
	  && mark_clean $non_active
	local ret=$?
	[ $ret -eq 0 ] && \
		logger -st fruit "Recovered $non_active" || \
		logger -st fruit "ERROR: Failed recovering $non_active"
	return $?
}

umount_non_active
[ $? -ne 0 ] && \
	logger -st fruit "ERROR: Failed to unmount $non_active" && \
	exit 1

if [ -f $flag_file ]; then
	enabled_recovery=$(fruit-value '\["root_partition_recovery"\]')
	if [ "$enabled_recovery" != "false" ]; then
		logger -st fruit "WARNING: $non_active is dirty"
		# do recovery since non-active is dirty
		recover_non_active
		exit 2
	else
		logger -st fruit "ERROR: $non_active is dirty but recovery is disabled (root_partition_recovery=false)"
		exit 3
	fi
fi

# mark non-active root partition as dirty
# then, apply update on non-active root partition
mark_dirty $non_active && \
	mount_non_active && \
	apply_update && \
	umount_non_active && \
	mark_clean $non_active
ret=$?
if [ $ret -eq 0 ]; then
	total=$(grep " Upgrading " /tmp/.fruit-update.apk-upgrade.stdout 2>/dev/null | wc -l)
	[ $total -gt 0 ] && touch /run/fruit-update.reboot
	logger -st fruit "Updated $non_active ($total packages upgraded)"
else
	umount_non_active
	logger -st fruit "ERROR: Failed updating $non_active"
fi

exit $ret
