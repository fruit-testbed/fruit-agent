#!/usr/bin/env python

import sys
import os
import json
import re


__LOCAL_CONFIG__ = "/run/fruit.json@local"
__SERVER_CONFIG__ = "/run/fruit.json@server"


def find_path(path, data):
    if len(path) == 0:
        return data
    if path[0] == "":
        return find_path(path[1:], data)
    if path[0] in data:
        return find_path(path[1:], data[path[0]])
    return None


def find_local_config(path):
    if os.path.exists(__LOCAL_CONFIG__):
        with open(__LOCAL_CONFIG__) as fin:
            data = json.load(fin)
        return find_path(path, data)
    return None


def find_server_config(path):
    if os.path.exists(__SERVER_CONFIG__):
        with open(__SERVER_CONFIG__) as fin:
            data = json.load(fin)
        return find_path(path, data)
    return None


def find(path):
    value = find_local_config(path)
    if value is None:
        return find_server_config(path)
    return value


def to_path(s):
    if s[:2] == "\\[" and s[-2:] == "\\]":
        return json.loads("[%s]" % s[2:-2])
    if s[0] == "/":
        s = s[1:]
    return re.split("/+", s)


if __name__ == "__main__":
    if len(sys.argv) <= 1:
        sys.exit(1)
    value = find(to_path(sys.argv[1]))
    if value is None:
        '''
        TODO: This does not distinguish between None and
              an empty string. Remove this branch in the future.
        '''
        sys.stdout.write("")
    elif isinstance(value, dict):
        json.dump(value, sys.stdout)
    else:
        sys.stdout.write(str(value))
    sys.stdout.flush()
