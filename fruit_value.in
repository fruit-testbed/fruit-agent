#!/usr/bin/env python

import sys
import os
import json
import re


__LOCAL_CONFIG__ = "/run/fruit.json@local"
__SERVER_CONFIG__ = "/run/fruit.json@server"

__INT__ = re.compile("^[0-9]+$")

def find_path(path, data):
    if len(path) == 0:
        return data
    if path[0] == "":
        return find_path(path[1:], data)
    if isinstance(data, dict):
        if path[0] in data:
            return find_path(path[1:], data[path[0]])
    elif isinstance(data, list) and re.match(__INT__, path[0]) is not None:
        idx = int(path[0])
        if idx < len(data):
            return find_path(path[1:], data[idx])
    return None


def find_local_config(path):
    if os.path.exists(__LOCAL_CONFIG__):
        with open(__LOCAL_CONFIG__) as fin:
            data = json.load(fin)
        return find_path(path, data)
    return None


def find_server_config(path):
    if os.path.exists(__SERVER_CONFIG__):
        try:
            with open(__SERVER_CONFIG__) as fin:
                data = json.load(fin)
            return find_path(path, data)
        except:
            ''' TODO: Log a warning '''
            pass
    return None


def find(path):
    value = find_local_config(path)
    if value is None:
        return find_server_config(path)
    return value


def to_path(s):
    if s[:2] == "\\[" and s[-2:] == "\\]":
        return json.loads("[%s]" % s[2:-2])
    if s[0] == "/":
        s = s[1:]
    return re.split("/+", s)


if __name__ == "__main__":
    '''
    - exit-code=0 means the path is found and its value is not 'null'
    - exit-code=1 means the path is not given in the command line argument
    - exit-code=2 means the path is not found, or its value is 'null'
    '''
    if len(sys.argv) <= 1:
        sys.exit(1)
    value = find(to_path(sys.argv[1]))
    if value is None:
        sys.exit(2)
    elif isinstance(value, str) or isinstance(value, unicode):
        sys.stdout.write(str(value))
    else:
        json.dump(value, sys.stdout)
    sys.stdout.flush()
    sys.exit(0)
